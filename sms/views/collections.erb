<!-- collections.erb -->

<% content_for :title do %>
      <title>NIAS SMS: SIF Memory Store</title>
<% end %>

<div class="container">
  
	<!-- header -->
    <section class="header">
    	<!-- <img class="value-img" src="images/watch.svg"> -->
    	<img class="value-img" src="images/search.svg" width="160" height="160">
    	<!-- <img class="value-img" src="images/deadlines.svg" width="132" height="132"> -->
        <div class="row">
        	<div class="twelve columns" style="margin-top: 5%">
                <h4>NIAS - SMS</h4>
                <p>SIF Memory Store</p>
            </br></br></br>
            </div>
        </div>
    </section>

    <!-- navigation -->
    <div class="navbar-spacer"></div>
    <nav class="navbar">
        <div class="container">
            <ul class="navbar-list">
                <li class="navbar-item"><a class="navbar-link" href="#collections">Collections</a></li>
                <li class="navbar-item"><a class="navbar-link" href="#query_ui">Query</a></li>                
                <!-- <li class="navbar-item"><a class="navbar-link" href="#graph">View</a></li> -->
            </ul>
        </div>
    </nav>

    <!-- collections list -->
    <div class="docs-section" id="collections"> 
		<h6 class="docs-header">SMS Collections</h6>

		<div class="row">
    		<div class="seven columns" id="collection_text">
    			<h6 class="docs-header">Known Collections</h6>
				<div><p>These are the known object collections provided to the SMS so far...</p></div>	
    		</div>

    		<div class="five columns" id="collection_list">
    			<h6 class="docs-header">SMS has:</h6>
    			<%= @coll_result.count %> known collections: -
				<div>
					<p>
						<ul>
                            <% @coll_result.sort! %>
							<% @coll_result.each do | collection | %>
								<li><%= collection %> </li>
							<% end %>
						</ul>
						
					</p>
				</div>	
    		</div>
    	</div>
	</div>

    <!-- lightweight query interface -->
    <div class="docs-section" id="query_ui"> 
		<h6 class="docs-header">Query Explorer</h6>
            <div class="row">

            <div class="six columns">
                <label for="collections1">( From Collection... )</label>
                <select class="u-full-width" id="collections1">
                    <% @coll_result.sort! %>
                    <% @coll_result.each do | collection | %>
                        <option value="<%= collection %>"><%= collection %></option>    
                    <% end %>
                </select>

                <label for="item">Item</label>
                <select class="u-full-width" id="item">
                    <!-- selector has no values until collection is chosen to select an item from -->
                </select>

                <label for="collections2">Relationship Collection</label>
                <select class="u-full-width" id="collections2">
                    <% @coll_result.sort! %>
                    <% @coll_result.each do | collection | %>
                        <option value="<%= collection %>"><%= collection %></option>    
                    <% end %>
                </select>

                <button class="button-primary" id="query">Run Query</button>                                
            </div>

            <div class="six columns">
                <div id="chartContainer"></div>
		</div>
	</div>
                <div id="networkContainer" ></div>


        <div class="row">
            <div class="twelve columns">
                <label for="results">Results</label>
                <pre class="code-example">
                    <code class="code-example-body prettyprint" id="results">
                    </code>
                </pre> 
            </div>
        </div>

        <!-- handler for collection-to-find-an-item selector -->
        <script>
            // force user to choose a collection
            $("#collections1 option:first").before( $('<option>',{value: 0,text: ''}));
            
            $("#collections1").change(function () {
                $("#item").find("option:gt(0)").remove();
                $("#item").find("option:first").text("Loading...");
                $.getJSON("/sms/find", {
                    collection: $(this).val()
                }, function (json) {
		    json = json.sort(function(a,b) {return a.label.localeCompare( b.label )});
                    $("#item").find("option:first").text("");
                    for (var i = 0; i < json.length; i++) {
                        $("<option/>").attr("value", json[i].id).text(json[i].label).appendTo($("#item"));
                    }
                });
            });

    		$("#item").change(function() {

                // var item = $("#item :selected").text();
                var item = $("#item").val();
                $("#chartContainer").empty();
                $("#networkContainer").empty();

                var svg = dimple.newSvg("#chartContainer", "100%", "200px");
                
                d3.json("/graph_data/linked_collections?id="+ item, function (data) {
                    var myChart = new dimple.chart(svg, data);
                    myChart.setBounds("20%", "10%", "60%", "80%")
                    myChart.addMeasureAxis("x", "data");
                    myChart.addCategoryAxis("y", "collection");
                    var ring = myChart.addSeries("collection", dimple.plot.bar);
                    myChart.draw();
                });

		d3.json("/graph_data/local_network?id="+item, function (data) {
			var G = new jsnx.Graph();
			var colours = ['red', 'maroon', 'yellow', 'olive', 'lime', 'green', 'aqua', 'teal', 'blue', 'navy', 'fuchsia', 'purple'];
			G.addNode(0, {labels: 'ME', color: 'white'} );
			var collections = new Object();
			var j = 0;
                    	for (var i = 0; i < data.length; i++) {
				if(!collections.hasOwnProperty(data[i].collection)) {
					collections[data[i].collection] = (j < colours.length-1 ? j++ : j);
				}
				if(data[i].target != 0) {
                       			G.addNode(data[i].target, {color: colours[collections[data[i].collection]], labels: data[i].label});
				}
				G.addEdge(data[i].origin, data[i].target, { color : data[i].link == 'direct' ? 'black' : 'blue' });
                    	}
			jsnx.draw(G, {
				element: '#networkContainer',
				withLabels: true,
				labels: 'labels',
				nodeStyle : {
					fill: function(d) { return d.data.color; }
				},
				edgeStyle: {
					stroke: function(d) { return d.data.color; }
				},
				height: 500
				
			});
		});
            });

            $("#query").click(function(){

                var collection = $("#collections2").val();
                //var item = $("#item :selected").text();
                var item = $("#item").val();
                var request = {};

                request.collection = collection;
                request.include_messages = true;
                request.id = item;

	    
                $("#results").empty();
                $.getJSON("/sms/find", request, function(result){
                    $.each(result, function(i, field){
                        $("#results").append( '<br/><br/>' );
                        $("#results").append( document.createTextNode(field.id));
                        $("#results").append( '<br/><br/>' );
                        $("#results").append( document.createTextNode(field.data));
                        $("#results").append( '<br/>' );
                    });
                });
            });

        </script>
    </div>

</div>






